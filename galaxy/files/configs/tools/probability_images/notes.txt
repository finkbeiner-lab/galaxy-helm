Pixel classification categories:
    1. Background
    2. Neurites
    3. Neuron bodies (glial bodies later?)
    4. Debris

Image transformation filters used:
    1. Hessian
    2. Membrane projections
    3. Difference of gaussians
    4. Gabor
    5. Laplacian

Regression model used:
    Random forest

More information about the plugin:
http://fiji.sc/Trainable_Weka_Segmentation

Would need to call .getProbability for the image currently in use.
Would mean that we need to call the whole weka plugin for each image.
Try to see if we can replace the input image 'current' to plugin. 

Time to run on montaged 4x4: 1.6minutes

Workflow:
Intern preparation:
    1. Prepare folder with 20 or so images (individual panels)
    2. Install generate_labeled_data.ijm plugin.
    3. Install concatenate_arffs.py plugin
    4. Install train_classifier.ijm plugin
    5. Show interns basic FIJI shortcuts for zooming and enhancing contrast.
    6. Show interns how to execute plugin and label images.
Intern protocol (iteration):
    Start Fiji
    1. Open a file
    2. Run plugin: generate_labeled_data (from Plugins menu)
    3. Click OK when labeling is complete and ready to save data
    4. Confirm that data was saved as image_name.arff (same folder as image)
    5. Repeat steps 1-4 with the next image
Generating model:
    1. Put all data (arff files) relevant to model in one folder.
    2. Open FIJI
    3. Open a dummy image (so that WEKA doesn't complain as much)
    2. Run train_classifier plugin (this will also call concatenate_arffs.py)
    3. Select folder with .arff files when dialog comes up.
    4. Load data and choose merged.arff
    5. Click 'Train Classifier'
    6. Click 'Save Classifier': merged-classifier.model	 
Run Galaxy modules to generate and process probability images:
    Galaxy will call make_probability_images.py 
    User will enter: 
    	 Path to raw images
	 Path to model
	 Path to destination forlder (write path)
    Galaxy will call find_neurite_area.py
    User will enter:
    	 Path to probability images
	 Threshold to use for probability images
 



