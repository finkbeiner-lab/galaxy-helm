<tool id="crop_dev" name="Crop Images" version="1">

<description>Crops out alignment-introduced edges.</description>

<command interpreter="python">
shift_crop_versions.py $infile $process_mode $input_path $output_path $outfile

#if $shifts_dict_path != '':
   --shifts_dict_path '$shifts_dict_path'
#end if
</command>

<inputs>
<param name="infile" type="data" format="data" label="Local variables dictionary (output from 'Alignment')."/>
<param name="process_mode" type="select" label="Select a processing mode" help="Multiprocessing use all the cores in one node while Distributed use all the cores in all nodes in the cluster">
            <option value="multiprocessing" selected='true'>MultiProcessing</option>
            <!-- <option value="distributed">Distributed</option> -->
</param>
<param name="input_path" type="text" format="text" value="/finkbeiner/imaging/smb-robodata/your_folders" size="70" label="Enter path to aligned images. Example: AlignedImages" help="Note that RoboData/your_folders = /finkbeiner/imaging/smb-robodata/your_folders"/>
<param name="output_path" type="text" format="text" value="/finkbeiner/imaging/smb-robodata/your_folders" size="70" label="Enter path to output cropped images. Example: CroppedImages" help="Note that RoboData/your_folders = /finkbeiner/imaging/smb-robodata/your_folders"/>
<param name="shifts_dict_path" type="text" format="text" value="" size="70" label="Optional: Enter path to your calculated shifts file. Leave blank to use shifts from the dictionary passed from the Alignment module." help="This is the .dict file that gets saved to the AlignedImages folder."/>
</inputs>

<outputs>
<data name="outfile" type="text" format="data" label="Crop Images Result"/>
</outputs>

<help>
Removes borders due to shifting. Sets all images to a common matrix. Only cells within this matrix will be tracked.
</help>

</tool>
